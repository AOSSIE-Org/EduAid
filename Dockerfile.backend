# Stage 1: Build dependencies in a minimal environment
FROM python:3.10-slim AS builder

# Set environment variables
ENV PYTHONUNBUFFERED=1
ENV NLTK_DATA=/usr/share/nltk_data

# Set working directory
WORKDIR /app

# Install required build tools including git
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    git \
    wget \
    build-essential \
    libssl-dev \
    python3-dev && \
    rm -rf /var/lib/apt/lists/*

# Upgrade pip and setuptools
RUN pip install --upgrade pip setuptools

# Copy and install Python dependencies
COPY backend/requirements.txt /app/backend/requirements.txt
RUN pip install --no-cache-dir -r /app/backend/requirements.txt

# Install NLTK and download only required data
RUN pip install nltk && \
    python -m nltk.downloader -d /usr/share/nltk_data punkt wordnet stopwords

# Download and extract Sense2Vec model
RUN wget https://github.com/explosion/sense2vec/releases/download/v1.0.0/s2v_reddit_2015_md.tar.gz && \
    mkdir -p /app/backend/ && \
    tar -xzvf s2v_reddit_2015_md.tar.gz -C /app/backend/ && \
    rm s2v_reddit_2015_md.tar.gz

# Stage 2: Create a minimal runtime image
FROM python:3.10-slim

# Set environment variables
ENV PYTHONUNBUFFERED=1
ENV NLTK_DATA=/usr/share/nltk_data

# Set working directory
WORKDIR /app/backend

# Install runtime dependencies
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    ca-certificates && \
    rm -rf /var/lib/apt/lists/*

# Copy Python dependencies from the builder
COPY --from=builder /usr/local/lib/python3.10 /usr/local/lib/python3.10

# Copy Sense2Vec model and NLTK data from the builder
COPY --from=builder /app/backend/s2v_old /app/backend/s2v_old
COPY --from=builder /usr/share/nltk_data /usr/share/nltk_data

# Copy the application code
COPY backend/ /app/backend

# Install Gunicorn for production
RUN pip install gunicorn

# Expose port
EXPOSE 5000

# Run the Flask app using Gunicorn
CMD ["gunicorn", "--bind", "0.0.0.0:5000","--access-logfile" ,"- --error-logfile", "server:app"]
